# TTi EX355P Power Supply
# I.Gillingham May 2013
# 
# Macros:
#   P   - The prefix name
#   PORT- The asyn port

# The desired output voltage.
#% autosave 1 VAL
# %archiver 1 Monitor VAL
record(ao, "$(P):VOLTAGE") 
    {
    field(DESC, "Output voltage")
    field(EGU, "V")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT, "@ttiEX355P.proto setVoltage $(PORT)")
    field(PINI, "YES")
    }

# The desired output current.
#% autosave 1 VAL
# %archiver 1 Monitor VAL
record(ao, "$(P):CURRENT") 
    {
    field(DESC, "Output current")
    field(EGU, "A")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT, "@ttiEX355P.proto setCurrent $(PORT)")
    field(PINI, "YES")
    }

# The read back setpoint voltage
# %archiver 1 Monitor VAL
record(ai, "$(P):VOLTAGE_SP") 
    {
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "V")
    field(INP, "@ttiEX355P.proto getSetpointVoltage $(PORT)")
    field(PINI, "YES")
    }

# The read back output voltage
# %archiver 1 Monitor VAL
record(ai, "$(P):VOLTAGE_RBV") 
    {
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "V")
    field(INP, "@ttiEX355P.proto getActualVoltage $(PORT)")
    field(PINI, "YES")
    }

# The read back setpoint current
# %archiver 1 Monitor VAL
record(ai, "$(P):CURRENT_SP") 
    {
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "A")
    field(INP, "@ttiEX355P.proto getSetpointCurrent $(PORT)")
    field(PINI, "YES")
    }

# The read back output current
# %archiver 1 Monitor VAL
record(ai, "$(P):CURRENT_RBV") 
    {
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(EGU, "A")
    field(INP, "@ttiEX355P.proto getActualCurrent $(PORT)")
    field(PINI, "YES")
    }

# Output control
#% autosave 1 VAL
# %archiver 1 Monitor VAL
record(bo, "$(P):OUTPUT") 
    {
    field(DESC, "Output control")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT, "@ttiEX355P.proto setOutput $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    }

# Output state
record(bi, "$(P):OUTPUT_RBV") 
    {
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@ttiEX355P.proto getOutput $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    }


# Output mode status
record(bi, "$(P):OUTPUT_MODE") 
    {
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP, "@ttiEX355P.proto getMode $(PORT)")
    field(ZNAM, "Constant Voltage")
    field(ONAM, "Constant Current")
    }

# The error register
# %archiver 1 Monitor VAL
record(mbbi, "$(P):ERROR")
    {
    field(DESC, "Error status")
    field(DTYP, "stream")
    field(INP, "@ttiEX355P.proto getError $(PORT)")
    field(SCAN, "1 second")
    field(ZRST, "No error")
    field(ONST, "Command not recognised")
    field(TWST, "Command value outside limits")
    field(UNSV, "MAJOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MINOR")
    field(TWSV, "MAJOR")
    field(PINI, "YES")
    }

record(stringin, "$(P):IDENT")
    {
    field(DESC, "Identity")
    field(DTYP, "stream")
    field(INP, "@ttiEX355P.proto getIDN $(PORT)")
    field(SCAN, "10 second")
    }

# Reset the instrument
# Just write to .PROC to invoke
# ZNAM, ONAM have no effect.
record(bo, "$(P):RESET") 
    {
    field(DESC, "Reset supply")
    field(DTYP, "stream")
    field(OUT, "@ttiEX355P.proto reset $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    }
    
